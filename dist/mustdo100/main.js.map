{"version":3,"sources":["./src/environments/environment.ts","./src/app/mustdo.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/result-modal/result-modal.component.ts","./src/app/result-modal/result-modal.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MustdoService {\n\n  constructor(private http: HttpClient) { }\n\n  public getMustdo(): Observable<any> {\n    return this.http.get('./assets/mustdo.json');\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MustdoService } from './mustdo.service';\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ResultModalComponent } from './result-modal/result-modal.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'mustdo100';\n  mustdo: any;\n  total = 0;\n  progress = 0;\n  queryParams = {};\n  current: any;\n  mode: 'fill' | 'result' = 'fill';\n  result = [];\n\n  constructor(\n    public mustdoService: MustdoService,\n    public route: ActivatedRoute,\n    public router: Router,\n    private modalService: NgbModal\n  ) {\n  }\n  async ngOnInit(): Promise<void> {\n    this.mustdo = await this.mustdoService.getMustdo().toPromise();\n    this.current = this.mustdo.questions[0];\n    this.total = this.mustdo.questions.length;\n    this.route.queryParamMap.subscribe(queryParams => {\n      // tslint:disable-next-line:no-string-literal\n      Object.assign(this.queryParams, queryParams['params']);\n      this.progress = queryParams.keys.length / this.total * 100;\n      if (this.progress !== 100) {\n        this.current = this.mustdo.questions[queryParams.keys.length];\n      } else {\n        this.mode = 'result';\n        this.generateResult();\n      }\n    });\n\n  }\n\n  next(result): void {\n    this.queryParams[this.current.id] = result;\n    this.router.navigate(['/'], { queryParams: this.queryParams });\n  }\n\n  generateResult() {\n    for (const [key, value] of Object.entries(this.queryParams)) {\n      if (value === '1') {\n        const id = parseInt(key, 10);\n        const question = this.mustdo.questions.find(q => q.id === id);\n        if (question) {\n          this.result.push(question);\n        }\n      }\n    }\n  }\n\n  html2image() {\n    const node = document.getElementById('result-container');\n    console.log(node);\n\n    htmlToImage.toPng(node)\n      .then((dataUrl) => {\n        const modalRef = this.modalService.open(ResultModalComponent, {\n          size: 'xl'\n        });\n        modalRef.componentInstance.dataUrl = dataUrl;\n      })\n      .catch((error) => {\n        console.error('oops, something went wrong!', error);\n      });\n  }\n\n}\n","<div class=\"container-md pt-2\">\n  <ng-container *ngIf=\"mode === 'fill'\">\n    <p>\n      <ngb-progressbar type=\"primary\" [value]=\"progress\"></ngb-progressbar>\n    </p>\n    <div class=\"row justify-content-center\">\n      <div class=\"col-12 col-md-8\">\n        <div class=\"card\" style=\"width: 100%\">\n          <img src=\"{{current?.img}}\" class=\"card-img-top\" alt=\"img\">\n          <div class=\"card-body\" style=\"text-align: center;\">\n            <h5 class=\"card-title\">{{current?.title}}</h5>\n            <p class=\"card-text\"></p>\n            <button (click)=\"next(1)\" class=\"btn btn-primary mr-3\">做过</button>\n            <button (click)=\"next(0)\" class=\"btn btn-primary\">还没做过</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"mode === 'result'\">\n    <div class=\"row\" id=\"result-container\">\n      <div class=\"col-4 col-sm-3\" *ngFor=\"let ques of result\">\n        <div class=\"card\" style=\"width: 100%\">\n          <img src=\"{{ques.img}}\" class=\"card-img-top\" alt=\"img\">\n          <div style=\"text-align: center;\">\n            <p>{{ques.title}}</p>\n            <p class=\"card-text\"></p>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row mt-2\">\n      <div class=\"col-12\">\n        <button (click)=\"html2image()\" class=\"btn btn-primary\">生成图片</button>\n      </div>\n    </div>\n  </ng-container>\n\n\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ResultModalComponent } from './result-modal/result-modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ResultModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgbModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [ResultModalComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-result-modal',\n  templateUrl: './result-modal.component.html',\n  styleUrls: ['./result-modal.component.scss']\n})\nexport class ResultModalComponent implements OnInit {\n\n  @Input() dataUrl;\n\n  constructor(public activeModal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    const img = new Image();\n    img.src = this.dataUrl;\n    const resultImgContainer = document.getElementById('result-img-container');\n    img.style.width = '100%';\n    resultImgContainer.appendChild(img);\n  }\n\n  download() {\n    const link = document.createElement('a');\n    link.download = 'mustdo100.png';\n    link.href = this.dataUrl;\n    link.click();\n  }\n\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\">分享</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div id=\"result-img-container\" class=\"text-center\"></div>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"download()\">下载</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}